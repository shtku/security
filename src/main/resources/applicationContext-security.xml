<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:sec="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security.xsd">
    <!-- 配置不过滤的资源（静态资源及登录相关） -->  
    <sec:http pattern="/**/*.css" security="none"></sec:http>  
    <sec:http pattern="/**/*.jpg" security="none"></sec:http>  
    <sec:http pattern="/**/*.jpeg" security="none"></sec:http>  
    <sec:http pattern="/**/*.gif" security="none"></sec:http>  
    <sec:http pattern="/**/*.png" security="none"></sec:http>
    <sec:http pattern="/js/*.js" security="none"></sec:http>  
    <sec:http pattern="/getCode" security="none" /><!-- 不过滤验证码 -->  
    <sec:http pattern="/test/**" security="none"></sec:http><!-- 不过滤测试内容 --> 
    
    <sec:http auto-config="false" use-expressions="true">  
     	<sec:intercept-url pattern="/login" access="permitAll" requires-channel="https"/> 
 	    <sec:intercept-url pattern="/app.jsp" access="hasRole('ROLE_SERVICE')" requires-channel="https"/>  
	    <sec:intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')" requires-channel="https"/>  
	    <sec:form-login login-page="/login" authentication-failure-url="/login" 
	    	default-target-url="/home"/>
	    <sec:logout invalidate-session="true" logout-url="/logOut"
	    	logout-success-url="/"/>
	    <sec:remember-me key="securityStore"  services-ref="rememberMeServices"/>
    </sec:http>
    
    
    <!-- 用户管理 -->
    <sec:authentication-manager alias="authenticationManager">  
        <sec:authentication-provider user-service-ref="jdbcUserService">  
        	<sec:password-encoder ref="passwordEncoder">
        		<sec:salt-source ref="saltSource"/>
        	</sec:password-encoder>
        </sec:authentication-provider>  
    </sec:authentication-manager>  
    
    
    <!-- spring security IP remember me  内存实现-->
	<bean id="ipTokenBasedRemberMeService" class="com.shtku.security.IPTokenBasedRemberMeService">
		<property name="key"><value>securityStore</value></property>
		<property name="userDetailsService" ref="jdbcUserService"></property>
		<property name="parameter" value="_remember_me"></property>
		<property name="cookieName" value="Remember_ME"></property>
	</bean>
	
	<!-- RememberMeServices的实现  数据库实现-->

   <bean id="rememberMeServices"
	  class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
      <property name="userDetailsService" ref="jdbcUserService" />
      <property name="key" value="securityStore" />
      <property name="tokenValiditySeconds" value="120"></property>
      <!-- 指定request中包含的用户是否选择了记住我的参数名 -->
      <property name="parameter" value="_remeber_me"/>
      <!-- 指定PersistentTokenRepository -->
      <property name="tokenRepository">
         <bean class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
            <!-- 数据源 -->
            <property name="dataSource" ref="dataSource"/>
            <!-- 是否在系统启动时创建持久化token的数据库表 -->
            <property name="createTableOnStartup" value="false"/>
         </bean>
      </property>

   </bean>
	
	
	
	<!--  自定义userService
	<bean id="userService" class="com.shtku.security.CustomerJdbcDaoImpl">
		
	</bean> -->
	<bean id="jdbcUserService" class="com.shtku.security.MyJdbcUserDetailManager">
		<property name="dataSource" ref="dataSource"/> 
		<property name="authenticationManager" ref="authenticationManager"/>
	</bean>
	
	<!-- 初始将数据库的密码加密
	<bean class="com.shtku.security.DatabasePasswordSecurerBean" init-method="secureDatabase" depends-on="dataSource">
		<property name="dataSource" ref="dataSource"/> 
	</bean> -->
	
	
	<bean
	class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"
	id="passwordEncoder" />
			
	<bean
		class="org.springframework.security.authentication.dao.ReflectionSaltSource"
		id="saltSource"> <property name="userPropertyToUse" value="username"/> </bean>
</beans>